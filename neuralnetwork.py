# -*- coding: utf-8 -*-
"""NeuralNetwork.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1udovbPvztjbZHxTAVO5JjHy7gh0lmHl6
"""

from keras.datasets import mnist

# โหลดข้อมูล MNIST
(x_train, y_train), (x_test, y_test) = mnist.load_data()

# ทำ Normalization
x_train, x_test = x_train / 255.0, x_test / 255.0

# แปลงข้อมูลเป็น (28, 28, 1)
x_train = x_train.reshape(x_train.shape[0], 28, 28, 1)
x_test = x_test.reshape(x_test.shape[0], 28, 28, 1)

# One-hot encode labels
from keras.utils import to_categorical
y_train = to_categorical(y_train, 10)
y_test = to_categorical(y_test, 10)

print(x_train.shape)  # ดูขนาดข้อมูลหลังการเตรียม

from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense

# สร้างโมเดล
model = Sequential([
    Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),
    MaxPooling2D(2, 2),
    Conv2D(64, (3, 3), activation='relu'),
    MaxPooling2D(2, 2),
    Flatten(),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')
])

from keras.optimizers import SGD

# ตั้งค่า optimizer และ compile โมเดล
model.compile(optimizer=SGD(learning_rate=0.01, momentum=0.9),
              loss='categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=2)

# บันทึกโมเดล
model.save('my_mnist_model.h5')

from google.colab import files
from PIL import Image
import numpy as np
import matplotlib.pyplot as plt

# ฟังก์ชันสำหรับอัปโหลดรูปจากเครื่อง
uploaded = files.upload()

# แปลงรูปภาพที่อัปโหลด
for fn in uploaded.keys():
    # อ่านรูปภาพ
    img = Image.open(fn).convert('L')  # 'L' แปลงเป็น grayscale

    # ปรับขนาดให้เป็น 28x28
    img = img.resize((28, 28))

    # แปลงภาพเป็น numpy array
    img_array = np.array(img)

    # ทำ Normalization ให้เป็นค่าระหว่าง 0 และ 1
    img_array = img_array / 255.0

    # ปรับขนาดข้อมูลเป็น (1, 28, 28, 1)
    img_array = img_array.reshape(1, 28, 28, 1)

    # ทำนายผลโดยใช้โมเดลที่ฝึกแล้ว
    prediction = model.predict(img_array)

    # แสดงผลลัพธ์
    predicted_label = np.argmax(prediction)
    print(f"Prediction: {predicted_label}")

    # แสดงรูปภาพที่อัปโหลด
    plt.imshow(img, cmap='gray')
    plt.title(f"Predicted Number: {predicted_label}")
    plt.show()